weather:
  api:
    key: ${WEATHER_API_KEY}
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
  main:
    allow-circular-references: true
  server:
    port: ${SERVER_PORT}
    servlet:
      context-path: /journal
  redis:
    data:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  data:
    mongodb:
      uri: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/journaldb?authSource=admin
      database: journaldb
      auto-index-creation: true
  mail:
    host: ${JAVA_EMAIL_HOST}
    port: 587
    username: ${JAVA_EMAIL}
    password: ${JAVA_EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: weekly-sentiment-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.example.journal.model
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: >
            org.apache.kafka.common.security.plain.PlainLoginModule required
            username="${KAFKA_USERNAME}"
            password="${KAFKA_PASSWORD}"
            serviceName="kafka";
      session:
        timeout:
          ms: 30000